"use strict";(self.webpackChunkmongodb_rag_docs=self.webpackChunkmongodb_rag_docs||[]).push([[976],{7879:function(n,e,t){t.r(e),t.d(e,{assets:function(){return c},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return a},metadata:function(){return o},toc:function(){return l}});var o=JSON.parse('{"id":"intro","title":"Introduction","description":"MongoDB-RAG is a library designed to integrate Retrieval-Augmented Generation (RAG) with MongoDB Atlas Vector Search.","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/mongodb-rag/docs/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/mongodb-developer/mongodb-rag/tree/main/mongodb-rag-docs/docs/intro.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"intro","title":"Introduction","sidebar_position":1},"sidebar":"docs","next":{"title":"Installation","permalink":"/mongodb-rag/docs/installation"}}'),r=t(4848),i=t(8453);const a={id:"intro",title:"Introduction",sidebar_position:1},s="MongoDB-RAG",c={},l=[{value:"\ud83d\ude80 Features",id:"-features",level:2},{value:"\ud83d\udce6 Installation",id:"-installation",level:2},{value:"\ud83d\udcda Usage Example",id:"-usage-example",level:2}];function d(n){const e={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"mongodb-rag",children:"MongoDB-RAG"})}),"\n",(0,r.jsx)(e.p,{children:"MongoDB-RAG is a library designed to integrate Retrieval-Augmented Generation (RAG) with MongoDB Atlas Vector Search."}),"\n",(0,r.jsx)(e.h2,{id:"-features",children:"\ud83d\ude80 Features"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Fast Vector Search with MongoDB Atlas"}),"\n",(0,r.jsx)(e.li,{children:"OpenAI Embeddings Support"}),"\n",(0,r.jsx)(e.li,{children:"Batch Processing for Large Datasets"}),"\n",(0,r.jsx)(e.li,{children:"Advanced Indexing via MongoDB Aggregation"}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"-installation",children:"\ud83d\udce6 Installation"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sh",children:"npm install mongodb-rag\n"})}),"\n",(0,r.jsx)(e.h2,{id:"-usage-example",children:"\ud83d\udcda Usage Example"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-js",children:"import MongoRAG from 'mongodb-rag';\n\nconst rag = new MongoRAG({\n  mongoUrl: 'mongodb+srv://your-db-url',\n  database: 'mydb',\n  collection: 'mycollection',\n  embedding: {\n    provider: 'openai',\n    apiKey: process.env.OPENAI_API_KEY\n  }\n});\n\nawait rag.connect();\nconst results = await rag.search('What is vector search?');\nconsole.log(results);\n"})})]})}function u(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}},8453:function(n,e,t){t.d(e,{R:function(){return a},x:function(){return s}});var o=t(6540);const r={},i=o.createContext(r);function a(n){const e=o.useContext(i);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:a(n.components),o.createElement(i.Provider,{value:e},n.children)}}}]);