"use strict";(self.webpackChunkmongodb_rag_docs=self.webpackChunkmongodb_rag_docs||[]).push([[3741],{5089:function(t){t.exports=JSON.parse('{"permalink":"/mongodb-rag/blog/2025/02/22/building-the-docs-chatbot","editUrl":"https://github.com/mongodb-developer/mongodb-rag/tree/main/mongodb-rag-docs/blog/blog/2025-02-22-building-the-docs-chatbot.md","source":"@site/blog/2025-02-22-building-the-docs-chatbot.md","title":"Building an Intelligent Documentation Assistant with MongoDB-RAG","description":"\ud83d\udcd6 TL;DR","date":"2025-02-22T00:00:00.000Z","tags":[{"inline":true,"label":"mongodb","permalink":"/mongodb-rag/blog/tags/mongodb"},{"inline":true,"label":"vector-search","permalink":"/mongodb-rag/blog/tags/vector-search"},{"inline":true,"label":"rag","permalink":"/mongodb-rag/blog/tags/rag"},{"inline":true,"label":"ai","permalink":"/mongodb-rag/blog/tags/ai"},{"inline":true,"label":"workshop","permalink":"/mongodb-rag/blog/tags/workshop"},{"inline":true,"label":"tutorial","permalink":"/mongodb-rag/blog/tags/tutorial"}],"readingTime":3.925,"hasTruncateMarker":true,"authors":[{"name":"Michael Lynn","title":"Developer Advocate @ MongoDB","url":"https://github.com/mrlynn","imageURL":"https://avatars.githubusercontent.com/u/192552?v=4","key":null,"page":null}],"frontMatter":{"title":"Building an Intelligent Documentation Assistant with MongoDB-RAG","author":"Michael Lynn","author_title":"Developer Advocate @ MongoDB","author_url":"https://github.com/mrlynn","author_image_url":"https://avatars.githubusercontent.com/u/192552?v=4","tags":["mongodb","vector-search","rag","ai","workshop","tutorial"]},"unlisted":false,"prevItem":{"title":"Introducing the MongoDB-RAG Playground","permalink":"/mongodb-rag/blog/2025/02/23/introducing-playground"},"nextItem":{"title":"Build AI Applications with MongoDB: A Complete RAG Workshop","permalink":"/mongodb-rag/blog/2025/02/15/workshop-introduction"}}')},8453:function(t,n,o){o.d(n,{R:function(){return a},x:function(){return s}});var e=o(6540);const r={},i=e.createContext(r);function a(t){const n=e.useContext(i);return e.useMemo((function(){return"function"==typeof t?t(n):{...n,...t}}),[n,t])}function s(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(r):t.components||r:a(t.components),e.createElement(i.Provider,{value:n},t.children)}},9096:function(t,n,o){o.r(n),o.d(n,{assets:function(){return l},contentTitle:function(){return s},default:function(){return c},frontMatter:function(){return a},metadata:function(){return e},toc:function(){return u}});var e=o(5089),r=o(4848),i=o(8453);const a={title:"Building an Intelligent Documentation Assistant with MongoDB-RAG",author:"Michael Lynn",author_title:"Developer Advocate @ MongoDB",author_url:"https://github.com/mrlynn",author_image_url:"https://avatars.githubusercontent.com/u/192552?v=4",tags:["mongodb","vector-search","rag","ai","workshop","tutorial"]},s=void 0,l={authorsImageUrls:[void 0]},u=[{value:"<strong>\ud83d\udcd6 TL;DR</strong>",id:"-tldr",level:2},{value:"<strong>\ud83e\udd14 Why Build a Documentation Assistant?</strong>",id:"-why-build-a-documentation-assistant",level:3}];function g(t){const n={em:"em",h2:"h2",h3:"h3",p:"p",strong:"strong",...(0,i.R)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"-tldr",children:(0,r.jsx)(n.strong,{children:"\ud83d\udcd6 TL;DR"})}),"\n",(0,r.jsxs)(n.p,{children:["Ever wished your documentation could just ",(0,r.jsx)(n.em,{children:"answer questions"})," directly instead of forcing users to sift through endless pages? That\u2019s exactly what we built with the ",(0,r.jsx)(n.strong,{children:"MongoDB-RAG Documentation Assistant"}),". In this article, I\u2019ll walk you through the ",(0,r.jsx)(n.strong,{children:"why, what, and how"})," of building a chatbot that retrieves precise, relevant information from MongoDB-RAG\u2019s own documentation."]}),"\n",(0,r.jsx)(n.h3,{id:"-why-build-a-documentation-assistant",children:(0,r.jsx)(n.strong,{children:"\ud83e\udd14 Why Build a Documentation Assistant?"})}),"\n",(0,r.jsxs)(n.p,{children:["Traditional documentation search is useful, but it often leaves users with ",(0,r.jsx)(n.em,{children:"more questions than answers"}),". Developers need to read through entire pages, infer context, and piece together solutions. Instead, we wanted something:"]})]})}function c(t={}){const{wrapper:n}={...(0,i.R)(),...t.components};return n?(0,r.jsx)(n,{...t,children:(0,r.jsx)(g,{...t})}):g(t)}}}]);