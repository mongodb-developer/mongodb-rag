"use strict";(self.webpackChunkmongodb_rag_docs=self.webpackChunkmongodb_rag_docs||[]).push([[6505],{2092:function(e,n,r){r.r(n),r.d(n,{assets:function(){return a},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return i},metadata:function(){return t},toc:function(){return c}});var t=r(5089),s=r(4848),o=r(8453);const i={title:"Building an Intelligent Documentation Assistant with MongoDB-RAG",author:"Michael Lynn",author_title:"Developer Advocate @ MongoDB",author_url:"https://github.com/mrlynn",author_image_url:"https://avatars.githubusercontent.com/u/192552?v=4",tags:["mongodb","vector-search","rag","ai","workshop","tutorial"]},l=void 0,a={authorsImageUrls:[void 0]},c=[{value:"<strong>\ud83d\udcd6 TL;DR</strong>",id:"-tldr",level:2},{value:"<strong>\ud83e\udd14 Why Build a Documentation Assistant?</strong>",id:"-why-build-a-documentation-assistant",level:3},{value:"<strong>\ud83d\udee0\ufe0f How We Built It</strong>",id:"\ufe0f-how-we-built-it",level:2},{value:"<strong>1\ufe0f\u20e3 Document Ingestion</strong>",id:"1\ufe0f\u20e3-document-ingestion",level:3},{value:"<strong>2\ufe0f\u20e3 Vector Search with MongoDB Atlas</strong>",id:"2\ufe0f\u20e3-vector-search-with-mongodb-atlas",level:3},{value:"<strong>3\ufe0f\u20e3 Streaming Responses for a Real Chat Experience</strong>",id:"3\ufe0f\u20e3-streaming-responses-for-a-real-chat-experience",level:3},{value:"<strong>4\ufe0f\u20e3 Multi-Provider LLM Support</strong>",id:"4\ufe0f\u20e3-multi-provider-llm-support",level:3},{value:"<strong>\ud83d\udca1 Key Features</strong>",id:"-key-features",level:2},{value:"\ud83d\udd0d <strong>Real-time Context Retrieval</strong>",id:"-real-time-context-retrieval",level:3},{value:"\ud83d\udd17 <strong>Source Attribution</strong>",id:"-source-attribution",level:3},{value:"\u23f3 <strong>Streaming Responses</strong>",id:"-streaming-responses",level:3},{value:"\u2699\ufe0f <strong>Multi-Provider LLM Support</strong>",id:"\ufe0f-multi-provider-llm-support",level:3},{value:"\ud83e\udd16 <strong>Fallback Handling</strong>",id:"-fallback-handling",level:3},{value:"<strong>\ud83d\ude80 Try It Yourself</strong>",id:"-try-it-yourself",level:2},{value:"<strong>1\ufe0f\u20e3 Install MongoDB-RAG</strong>",id:"1\ufe0f\u20e3-install-mongodb-rag",level:3},{value:"<strong>2\ufe0f\u20e3 Configure Your Environment</strong>",id:"2\ufe0f\u20e3-configure-your-environment",level:3},{value:"<strong>3\ufe0f\u20e3 Initialize the Chatbot</strong>",id:"3\ufe0f\u20e3-initialize-the-chatbot",level:3},{value:"<strong>\ud83c\udf29\ufe0f Production Considerations</strong>",id:"\ufe0f-production-considerations",level:2},{value:"<strong>Where to Host?</strong>",id:"where-to-host",level:3},{value:"<strong>Which LLM for Production?</strong>",id:"which-llm-for-production",level:3},{value:"<strong>\ud83d\udd2e What\u2019s Next?</strong>",id:"-whats-next",level:2},{value:"<strong>\ud83c\udfac Conclusion</strong>",id:"-conclusion",level:2},{value:"\ud83d\udd17 <strong>Resources</strong>",id:"-resources",level:3}];function d(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"-tldr",children:(0,s.jsx)(n.strong,{children:"\ud83d\udcd6 TL;DR"})}),"\n",(0,s.jsxs)(n.p,{children:["Ever wished your documentation could just ",(0,s.jsx)(n.em,{children:"answer questions"})," directly instead of forcing users to sift through endless pages? That\u2019s exactly what we built with the ",(0,s.jsx)(n.strong,{children:"MongoDB-RAG Documentation Assistant"}),". In this article, I\u2019ll walk you through the ",(0,s.jsx)(n.strong,{children:"why, what, and how"})," of building a chatbot that retrieves precise, relevant information from MongoDB-RAG\u2019s own documentation."]}),"\n",(0,s.jsx)(n.h3,{id:"-why-build-a-documentation-assistant",children:(0,s.jsx)(n.strong,{children:"\ud83e\udd14 Why Build a Documentation Assistant?"})}),"\n",(0,s.jsxs)(n.p,{children:["Traditional documentation search is useful, but it often leaves users with ",(0,s.jsx)(n.em,{children:"more questions than answers"}),". Developers need to read through entire pages, infer context, and piece together solutions. Instead, we wanted something:"]}),"\n",(0,s.jsxs)(n.p,{children:["\u2705 ",(0,s.jsx)(n.strong,{children:"Conversational"})," \u2013 Answers questions in natural language",(0,s.jsx)(n.br,{}),"\n","\u2705 ",(0,s.jsx)(n.strong,{children:"Context-aware"})," \u2013 Finds relevant documentation snippets instead of just keywords",(0,s.jsx)(n.br,{}),"\n","\u2705 ",(0,s.jsx)(n.strong,{children:"Fast & Accurate"})," \u2013 Uses vector search to surface precise answers",(0,s.jsx)(n.br,{}),"\n","\u2705 ",(0,s.jsx)(n.strong,{children:"Transparent"})," \u2013 Links to original sources so users can verify answers",(0,s.jsx)(n.br,{}),"\n","\u2705 ",(0,s.jsx)(n.strong,{children:"Scalable"})," \u2013 Handles multiple LLM providers, including ",(0,s.jsx)(n.strong,{children:"OpenAI"})," and ",(0,s.jsx)(n.strong,{children:"Ollama"})]}),"\n",(0,s.jsxs)(n.p,{children:["Our solution? ",(0,s.jsx)(n.strong,{children:"A chatbot powered by MongoDB-RAG"}),", showcasing exactly what our tool was built for: ",(0,s.jsx)(n.strong,{children:"retrieval-augmented generation (RAG)"})," using ",(0,s.jsx)(n.strong,{children:"MongoDB Atlas Vector Search"}),"."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"\ufe0f-how-we-built-it",children:(0,s.jsx)(n.strong,{children:"\ud83d\udee0\ufe0f How We Built It"})}),"\n",(0,s.jsx)(n.p,{children:"We structured the assistant around four core components:"}),"\n",(0,s.jsx)(n.h3,{id:"1\ufe0f\u20e3-document-ingestion",children:(0,s.jsx)(n.strong,{children:"1\ufe0f\u20e3 Document Ingestion"})}),"\n",(0,s.jsxs)(n.p,{children:["To make documentation ",(0,s.jsx)(n.em,{children:"searchable"}),", we need to process it into vector embeddings. We use ",(0,s.jsx)(n.strong,{children:"semantic chunking"})," to break long docs into meaningful pieces before ingestion."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const chunker = new Chunker({\n  strategy: 'semantic',\n  maxChunkSize: 500,\n  overlap: 50\n});\n\nconst documents = await loadMarkdownFiles('./docs');\nconst chunks = await Promise.all(\n  documents.map(doc => chunker.chunkDocument(doc))\n);\n\nawait rag.ingestBatch(chunks.flat());\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["\ud83d\udcdd ",(0,s.jsx)(n.strong,{children:"Why Semantic Chunking?"})," Instead of blindly splitting text, we preserve contextual integrity by overlapping related sections."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"2\ufe0f\u20e3-vector-search-with-mongodb-atlas",children:(0,s.jsx)(n.strong,{children:"2\ufe0f\u20e3 Vector Search with MongoDB Atlas"})}),"\n",(0,s.jsxs)(n.p,{children:["Once ingested, we use ",(0,s.jsx)(n.strong,{children:"MongoDB Atlas Vector Search"})," to find the most relevant documentation snippets based on a user\u2019s query."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const searchResults = await rag.search(query, { \n  maxResults: 6,\n  filter: { 'metadata.type': 'documentation' }\n});\n"})}),"\n",(0,s.jsxs)(n.p,{children:["MongoDB\u2019s ",(0,s.jsx)(n.strong,{children:"$vectorSearch"})," operator ensures we retrieve the closest matching content, ranked by relevance."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"3\ufe0f\u20e3-streaming-responses-for-a-real-chat-experience",children:(0,s.jsx)(n.strong,{children:"3\ufe0f\u20e3 Streaming Responses for a Real Chat Experience"})}),"\n",(0,s.jsx)(n.p,{children:"To improve user experience, we stream responses incrementally as they\u2019re generated."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"router.post('/chat', async (req, res) => {\n  const { query, history = [], stream = true } = req.body;\n  \n  const context = await ragService.search(query);\n  \n  if (stream) {\n    res.writeHead(200, {\n      'Content-Type': 'text/event-stream',\n      'Cache-Control': 'no-cache',\n      'Connection': 'keep-alive'\n    });\n    \n    await llmService.generateResponse(query, context, history, res);\n  } else {\n    const answer = await llmService.generateResponse(query, context, history);\n    res.json({ answer, sources: context });\n  }\n});\n"})}),"\n",(0,s.jsx)(n.p,{children:"With this approach:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Responses appear ",(0,s.jsx)(n.strong,{children:"in real-time"})," instead of waiting for full generation \ud83d\ude80"]}),"\n",(0,s.jsxs)(n.li,{children:["Developers can get ",(0,s.jsx)(n.strong,{children:"partial answers"})," quickly while longer responses load"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"4\ufe0f\u20e3-multi-provider-llm-support",children:(0,s.jsx)(n.strong,{children:"4\ufe0f\u20e3 Multi-Provider LLM Support"})}),"\n",(0,s.jsxs)(n.p,{children:["The assistant supports ",(0,s.jsx)(n.strong,{children:"multiple embedding providers"}),", including OpenAI and ",(0,s.jsx)(n.strong,{children:"self-hosted Ollama"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const config = {\n  embedding: {\n    provider: process.env.EMBEDDING_PROVIDER || 'openai',\n    model: process.env.EMBEDDING_MODEL || 'text-embedding-3-small',\n    baseUrl: process.env.OLLAMA_BASE_URL // For local deployment\n  }\n};\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This allows users to ",(0,s.jsx)(n.strong,{children:"switch providers"})," easily, optimizing for performance, privacy, or cost."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-key-features",children:(0,s.jsx)(n.strong,{children:"\ud83d\udca1 Key Features"})}),"\n",(0,s.jsxs)(n.h3,{id:"-real-time-context-retrieval",children:["\ud83d\udd0d ",(0,s.jsx)(n.strong,{children:"Real-time Context Retrieval"})]}),"\n",(0,s.jsxs)(n.p,{children:["Instead of guessing, the chatbot ",(0,s.jsx)(n.strong,{children:"searches first"})," and then generates answers."]}),"\n",(0,s.jsxs)(n.h3,{id:"-source-attribution",children:["\ud83d\udd17 ",(0,s.jsx)(n.strong,{children:"Source Attribution"})]}),"\n",(0,s.jsxs)(n.p,{children:["Each response includes a ",(0,s.jsx)(n.strong,{children:"link to the documentation"}),", letting users verify answers."]}),"\n",(0,s.jsxs)(n.h3,{id:"-streaming-responses",children:["\u23f3 ",(0,s.jsx)(n.strong,{children:"Streaming Responses"})]}),"\n",(0,s.jsxs)(n.p,{children:["No waiting! Answers ",(0,s.jsx)(n.strong,{children:"generate in real-time"}),", improving responsiveness."]}),"\n",(0,s.jsxs)(n.h3,{id:"\ufe0f-multi-provider-llm-support",children:["\u2699\ufe0f ",(0,s.jsx)(n.strong,{children:"Multi-Provider LLM Support"})]}),"\n",(0,s.jsxs)(n.p,{children:["Deploy with ",(0,s.jsx)(n.strong,{children:"OpenAI for scale"})," or ",(0,s.jsx)(n.strong,{children:"Ollama for private, local hosting"}),"."]}),"\n",(0,s.jsxs)(n.h3,{id:"-fallback-handling",children:["\ud83e\udd16 ",(0,s.jsx)(n.strong,{children:"Fallback Handling"})]}),"\n",(0,s.jsxs)(n.p,{children:["If documentation doesn\u2019t contain an answer, the chatbot ",(0,s.jsx)(n.strong,{children:"transparently explains the limitation"})," instead of fabricating responses."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-try-it-yourself",children:(0,s.jsx)(n.strong,{children:"\ud83d\ude80 Try It Yourself"})}),"\n",(0,s.jsxs)(n.p,{children:["Want to build a ",(0,s.jsx)(n.strong,{children:"MongoDB-RAG-powered assistant"}),"? Here\u2019s how to get started:"]}),"\n",(0,s.jsx)(n.h3,{id:"1\ufe0f\u20e3-install-mongodb-rag",children:(0,s.jsx)(n.strong,{children:"1\ufe0f\u20e3 Install MongoDB-RAG"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm install mongodb-rag\n"})}),"\n",(0,s.jsx)(n.h3,{id:"2\ufe0f\u20e3-configure-your-environment",children:(0,s.jsx)(n.strong,{children:"2\ufe0f\u20e3 Configure Your Environment"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-env",children:"MONGODB_URI=your_atlas_connection_string\nEMBEDDING_PROVIDER=openai\nEMBEDDING_API_KEY=your_api_key\nEMBEDDING_MODEL=text-embedding-3-small\n"})}),"\n",(0,s.jsx)(n.h3,{id:"3\ufe0f\u20e3-initialize-the-chatbot",children:(0,s.jsx)(n.strong,{children:"3\ufe0f\u20e3 Initialize the Chatbot"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"import { MongoRAG } from 'mongodb-rag';\nimport express from 'express';\n\nconst rag = new MongoRAG(config);\nconst app = express();\n\napp.post('/api/chat', async (req, res) => {\n  const { query } = req.body;\n  const results = await rag.search(query);\n  res.json({ answer: results });\n});\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"\ufe0f-production-considerations",children:(0,s.jsx)(n.strong,{children:"\ud83c\udf29\ufe0f Production Considerations"})}),"\n",(0,s.jsx)(n.h3,{id:"where-to-host",children:(0,s.jsx)(n.strong,{children:"Where to Host?"})}),"\n",(0,s.jsxs)(n.p,{children:["We deployed our assistant on ",(0,s.jsx)(n.strong,{children:"Vercel"})," for:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Serverless scalability"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Fast global CDN"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Easy Git-based deployments"})}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"which-llm-for-production",children:(0,s.jsx)(n.strong,{children:"Which LLM for Production?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"OpenAI"})," \u2013 Best for reliability & speed"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Ollama"})," \u2013 Best for ",(0,s.jsx)(n.strong,{children:"privacy-first"})," self-hosted setups"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-env",children:"EMBEDDING_PROVIDER=openai\nEMBEDDING_MODEL=text-embedding-3-small\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-whats-next",children:(0,s.jsx)(n.strong,{children:"\ud83d\udd2e What\u2019s Next?"})}),"\n",(0,s.jsx)(n.p,{children:"Future improvements include:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Better query reformulation"})," to improve retrieval accuracy"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"User feedback integration"})," to refine responses over time"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Conversation memory"})," for context-aware follow-ups"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-conclusion",children:(0,s.jsx)(n.strong,{children:"\ud83c\udfac Conclusion"})}),"\n",(0,s.jsxs)(n.p,{children:["By combining ",(0,s.jsx)(n.strong,{children:"MongoDB Atlas Vector Search"})," with ",(0,s.jsx)(n.strong,{children:"modern LLMs"}),", we built an assistant that ",(0,s.jsx)(n.strong,{children:"transforms documentation into an interactive experience"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Try it out in our docs, and let us know what you think! \ud83d\ude80"}),"\n",(0,s.jsxs)(n.h3,{id:"-resources",children:["\ud83d\udd17 ",(0,s.jsx)(n.strong,{children:"Resources"})]}),"\n",(0,s.jsxs)(n.p,{children:["\ud83d\udcd8 ",(0,s.jsx)(n.a,{href:"https://mongodb.github.io/mongo-rag/",children:"MongoDB-RAG Docs"}),(0,s.jsx)(n.br,{}),"\n","\ud83d\udd17 ",(0,s.jsx)(n.a,{href:"https://github.com/mongodb-developer/mongodb-rag",children:"GitHub Repository"}),(0,s.jsx)(n.br,{}),"\n","\ud83d\udce6 ",(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/mongodb-rag",children:"NPM Package"})]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},5089:function(e){e.exports=JSON.parse('{"permalink":"/mongodb-rag/blog/2025/02/22/building-the-docs-chatbot","editUrl":"https://github.com/mongodb-developer/mongodb-rag/tree/main/mongodb-rag-docs/blog/blog/2025-02-22-building-the-docs-chatbot.md","source":"@site/blog/2025-02-22-building-the-docs-chatbot.md","title":"Building an Intelligent Documentation Assistant with MongoDB-RAG","description":"\ud83d\udcd6 TL;DR","date":"2025-02-22T00:00:00.000Z","tags":[{"inline":true,"label":"mongodb","permalink":"/mongodb-rag/blog/tags/mongodb"},{"inline":true,"label":"vector-search","permalink":"/mongodb-rag/blog/tags/vector-search"},{"inline":true,"label":"rag","permalink":"/mongodb-rag/blog/tags/rag"},{"inline":true,"label":"ai","permalink":"/mongodb-rag/blog/tags/ai"},{"inline":true,"label":"workshop","permalink":"/mongodb-rag/blog/tags/workshop"},{"inline":true,"label":"tutorial","permalink":"/mongodb-rag/blog/tags/tutorial"}],"readingTime":3.92,"hasTruncateMarker":false,"authors":[{"name":"Michael Lynn","title":"Developer Advocate @ MongoDB","url":"https://github.com/mrlynn","imageURL":"https://avatars.githubusercontent.com/u/192552?v=4","key":null,"page":null}],"frontMatter":{"title":"Building an Intelligent Documentation Assistant with MongoDB-RAG","author":"Michael Lynn","author_title":"Developer Advocate @ MongoDB","author_url":"https://github.com/mrlynn","author_image_url":"https://avatars.githubusercontent.com/u/192552?v=4","tags":["mongodb","vector-search","rag","ai","workshop","tutorial"]},"unlisted":false,"prevItem":{"title":"Introducing the MongoDB-RAG Playground","permalink":"/mongodb-rag/blog/2025/02/23/introducing-playground"},"nextItem":{"title":"Simplifying RAG with MongoDB","permalink":"/mongodb-rag/blog/2025/02/01/simplifying"}}')},8453:function(e,n,r){r.d(n,{R:function(){return i},x:function(){return l}});var t=r(6540);const s={},o=t.createContext(s);function i(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);